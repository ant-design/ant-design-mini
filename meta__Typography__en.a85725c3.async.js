"use strict";(self.webpackChunkantd_mini=self.webpackChunkantd_mini||[]).push([[7906],{39808:function(n,e,a){a.r(e),a.d(e,{demos:function(){return o}});var t=a(67294),d=a(62556),o={"src-typography-demo-typography":{component:t.memo(t.lazy(function(){return a.e(2433).then(a.bind(a,76963))})),asset:{type:"BLOCK",id:"src-typography-demo-typography",refAtomIds:[],dependencies:{},entry:"index.ts"},context:{},renderOpts:void 0}}},39073:function(n,e,a){a.r(e),a.d(e,{texts:function(){return d}});var t=a(62556);const d=[{value:"It is used when a piece of text needs to be displayed. It supports ellipsis and is compatible with bold on different platforms.",paraId:0,tocIndex:0},{value:"It can be used when action point operation buttons with icons are required.",paraId:0,tocIndex:0},{value:"icon",paraId:1,tocIndex:1},{value:" properties can support ",paraId:1,tocIndex:1},{value:"Icon",paraId:1,tocIndex:1},{value:" Components ",paraId:1,tocIndex:1},{value:"type",paraId:1,tocIndex:1},{value:" property, you can also pass in the link address of the icon directly.",paraId:1,tocIndex:1},{value:"In disabled mode, you can pass in ",paraId:1,tocIndex:1},{value:"onDisabledTap",paraId:1,tocIndex:1},{value:" Event, used to listen for the user's click on the text in the disabled state.",paraId:1,tocIndex:1},{value:"Property",paraId:2,tocIndex:4},{value:"Description",paraId:2,tocIndex:4},{value:"Type",paraId:2,tocIndex:4},{value:"Default Value",paraId:2,tocIndex:4},{value:"text",paraId:2,tocIndex:4},{value:"Text content",paraId:2,tocIndex:4},{value:"string",paraId:2,tocIndex:4},{value:"-",paraId:2,tocIndex:4},{value:"iconPosition",paraId:2,tocIndex:4},{value:"Icon Location",paraId:2,tocIndex:4},{value:"left",paraId:2,tocIndex:4},{value:" | ",paraId:2,tocIndex:4},{value:"right",paraId:2,tocIndex:4},{value:"right",paraId:2,tocIndex:4},{value:"icon",paraId:2,tocIndex:4},{value:"Icon, you can support the type attribute of the Icon component, or you can directly pass in the link address of the icon.",paraId:2,tocIndex:4},{value:"IconType | string",paraId:2,tocIndex:4},{value:"''",paraId:2,tocIndex:4},{value:"className",paraId:2,tocIndex:4},{value:"Style Class",paraId:2,tocIndex:4},{value:"string",paraId:2,tocIndex:4},{value:"-",paraId:2,tocIndex:4},{value:"activeClassName",paraId:2,tocIndex:4},{value:"Click to activate the style class.",paraId:2,tocIndex:4},{value:"string",paraId:2,tocIndex:4},{value:"-",paraId:2,tocIndex:4},{value:"style",paraId:2,tocIndex:4},{value:"Style",paraId:2,tocIndex:4},{value:"string",paraId:2,tocIndex:4},{value:"-",paraId:2,tocIndex:4},{value:"disabled",paraId:2,tocIndex:4},{value:"Disable",paraId:2,tocIndex:4},{value:"boolean",paraId:2,tocIndex:4},{value:"false",paraId:2,tocIndex:4},{value:"selectable",paraId:2,tocIndex:4},{value:"Whether it can be selected",paraId:2,tocIndex:4},{value:"boolean",paraId:2,tocIndex:4},{value:"false",paraId:2,tocIndex:4},{value:"fontWeight",paraId:2,tocIndex:4},{value:"Heavy characters, compatible with iOS and Android platforms",paraId:2,tocIndex:4},{value:"normal",paraId:2,tocIndex:4},{value:" | ",paraId:2,tocIndex:4},{value:"medium",paraId:2,tocIndex:4},{value:" | ",paraId:2,tocIndex:4},{value:"bold",paraId:2,tocIndex:4},{value:"normal",paraId:2,tocIndex:4},{value:"lineThrough",paraId:2,tocIndex:4},{value:"Add Strikethrough Style",paraId:2,tocIndex:4},{value:"boolean",paraId:2,tocIndex:4},{value:"false",paraId:2,tocIndex:4},{value:"underline",paraId:2,tocIndex:4},{value:"Add Underline Style",paraId:2,tocIndex:4},{value:"boolean",paraId:2,tocIndex:4},{value:"false",paraId:2,tocIndex:4},{value:"ellipsisRow",paraId:2,tocIndex:4},{value:"Multiple lines are omitted, and the value must be greater than or equal to 1, which is consistent with the-webkit-line-clamp attribute of css.",paraId:2,tocIndex:4},{value:"number",paraId:2,tocIndex:4},{value:"-",paraId:2,tocIndex:4},{value:"#if ALIPAY onTap",paraId:2,tocIndex:4},{value:"Click the button to trigger this callback",paraId:2,tocIndex:4},{value:"(e: Event) => void",paraId:2,tocIndex:4},{value:"-",paraId:2,tocIndex:4},{value:"#if ALIPAY catchTap",paraId:2,tocIndex:4},{value:"Click the button to trigger this callback, non-bubbling",paraId:2,tocIndex:4},{value:"(e: Event) => void",paraId:2,tocIndex:4},{value:"-",paraId:2,tocIndex:4},{value:"#if ALIPAY onDisabledTap",paraId:2,tocIndex:4},{value:"In the disabled state, click the button to trigger this callback",paraId:2,tocIndex:4},{value:"(e: Event) => void",paraId:2,tocIndex:4},{value:"-",paraId:2,tocIndex:4},{value:"#if WECHAT bindtap",paraId:2,tocIndex:4},{value:"Click the button to trigger this callback",paraId:2,tocIndex:4},{value:"(e: Event) => void",paraId:2,tocIndex:4},{value:"-",paraId:2,tocIndex:4},{value:"#if WECHAT binddisabledtap",paraId:2,tocIndex:4},{value:"In the disabled state, click the button to trigger this callback",paraId:2,tocIndex:4},{value:"(e: Event) => void",paraId:2,tocIndex:4},{value:"-",paraId:2,tocIndex:4},{value:"Component provides the following CSS variables, which can be used to customize styles. For details, see ConfigProvider Components.",paraId:3,tocIndex:6},{value:"Variable name",paraId:4,tocIndex:6},{value:"Light Mode Default",paraId:4,tocIndex:6},{value:"Dark Mode Default",paraId:4,tocIndex:6},{value:"Remarks",paraId:4,tocIndex:6},{value:"--typography-container-color",paraId:4,tocIndex:6},{value:"#333333",paraId:4,tocIndex:6},{value:"#c5cad1",paraId:4,tocIndex:6},{value:"Typesetting container color",paraId:4,tocIndex:6}]}}]);
