"use strict";(self.webpackChunkantd_mini=self.webpackChunkantd_mini||[]).push([[9845],{16611:function(t,a,e){e.r(a),e.d(a,{demos:function(){return o}});var n=e(67294),d=e(45208),o={"src-icon-demo-icon":{component:n.memo(n.lazy(function(){return e.e(2433).then(e.bind(e,15078))})),asset:{type:"BLOCK",id:"src-icon-demo-icon",refAtomIds:[],dependencies:{},entry:"index.ts"},context:{},renderOpts:void 0}}},6990:function(t,a,e){e.r(a),e.d(a,{texts:function(){return d}});var n=e(45208);const d=[{value:"Semantic vector graphics. Icon icons can be used when graphics are needed to metaphorically present basic operating functions and give users correct, friendly and clear operating guidelines.",paraId:0,tocIndex:0},{value:"Introducing components in index.json",paraId:1,tocIndex:1},{value:`"usingComponents": {
#if ALIPAY
  "ant-icon": "antd-mini/es/Icon/index"
#endif
#if WECHAT
  "ant-icon": "antd-mini/Icon/index"
#endif
}
`,paraId:2,tocIndex:1},{value:"Search and view the icon, click the icon to copy.",paraId:3,tocIndex:2},{value:`<ant-icon type="SmileOutline" />
`,paraId:4,tocIndex:4},{value:`<ant-icon type="SmileOutline" style="font-size: 20px" />
<ant-icon type="SmileOutline" style="color: red" />
`,paraId:5,tocIndex:5},{value:"Property",paraId:6,tocIndex:7},{value:"Description",paraId:6,tocIndex:7},{value:"Type",paraId:6,tocIndex:7},{value:"Default Value",paraId:6,tocIndex:7},{value:"className",paraId:6,tocIndex:7},{value:"Class Name",paraId:6,tocIndex:7},{value:"string",paraId:6,tocIndex:7},{value:"-",paraId:6,tocIndex:7},{value:"style",paraId:6,tocIndex:7},{value:"Style",paraId:6,tocIndex:7},{value:"string",paraId:6,tocIndex:7},{value:"-",paraId:6,tocIndex:7},{value:"type",paraId:6,tocIndex:7},{value:"Types of Icons",paraId:6,tocIndex:7},{value:"string",paraId:6,tocIndex:7},{value:"-",paraId:6,tocIndex:7},{value:"#if ALIPAY catchTap",paraId:6,tocIndex:7},{value:"Callback function triggered when the icon is clicked",paraId:6,tocIndex:7},{value:"(e: Event) => void",paraId:6,tocIndex:7},{value:"-",paraId:6,tocIndex:7},{value:"#if ALIPAY onTap",paraId:6,tocIndex:7},{value:"Callback function triggered when the icon is clicked",paraId:6,tocIndex:7},{value:"(e: Event) => void",paraId:6,tocIndex:7},{value:"-",paraId:6,tocIndex:7},{value:"#if WECHAT catchtap",paraId:6,tocIndex:7},{value:"Callback function triggered when the icon is clicked",paraId:6,tocIndex:7},{value:"(e: Event) => void",paraId:6,tocIndex:7},{value:"-",paraId:6,tocIndex:7},{value:"#if WECHAT bindtap",paraId:6,tocIndex:7},{value:"Callback function triggered when the icon is clicked",paraId:6,tocIndex:7},{value:"(e: Event) => void",paraId:6,tocIndex:7},{value:"-",paraId:6,tocIndex:7},{value:"Component provides the following CSS variables, which can be used to customize styles. For more information, see ConfigProvider Components.",paraId:7,tocIndex:9},{value:"Variable name",paraId:8,tocIndex:9},{value:"Default Value",paraId:8,tocIndex:9},{value:"Dark Mode Default",paraId:8,tocIndex:9},{value:"Remarks",paraId:8,tocIndex:9},{value:"--icon-color",paraId:8,tocIndex:9},{value:"#333333",paraId:8,tocIndex:9},{value:"#c5cad1",paraId:8,tocIndex:9},{value:"Icon Color",paraId:8,tocIndex:9}]}}]);
