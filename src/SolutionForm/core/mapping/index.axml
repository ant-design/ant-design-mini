<import-sjs from="./index.sjs" name="mappingSjs" />

<template name="image-upload">
  <image-upload
    onTriggerChange="onTriggerChange"
    field="{{ item.path }}"
    config="{{mappingSjs.getComponentConfig(item)}}"
    value="{{ value }}"/>
</template>

<template name="selector">
  <selector
    onTriggerChange="onTriggerChange"
    field="{{ item.path }}"
    config="{{mappingSjs.getComponentConfig(item)}}"
    value="{{ value }}"/>
</template>

<template name="input">
  <input
    onTriggerChange="onTriggerChange"
    field="{{ item.path }}"
    config="{{mappingSjs.getComponentConfig(item)}}"
    value="{{ value }}"/>
</template>

<template name="radio">
  <radio
    onTriggerChange="onTriggerChange"
    field="{{ item.path }}"
    config="{{mappingSjs.getComponentConfig(item)}}"
    value="{{ value }}"/>
</template>

<template name="switch">
  <switch
    onTriggerChange="onTriggerChange"
    field="{{ item.path }}"
    config="{{ mappingSjs.getComponentConfig(item) }}"
    value="{{ value }}"/>
</template>

<template name="picker">
  <picker
    onTriggerChange="onTriggerChange"
    field="{{ item.path }}"
    config="{{mappingSjs.getComponentConfig(item)}}"
    value="{{ value }}"/>
</template>

<template name="date-picker">
  <date-picker
    onTriggerChange="onTriggerChange"
    field="{{item.path }}"
    config="{{mappingSjs.getComponentConfig(item)}}"
    value="{{ value }}"/>
</template>

<template name="textarea">
  <textarea
    onTriggerChange="onTriggerChange"
    field="{{ item.path }}"
    config="{{mappingSjs.getComponentConfig(item)}}"
    value="{{ value }}"/>
</template>

<form-item
  a:for="{{ finalFormItemArr }}"
  item="{{ item }}"
  displayType="{{ item.displayType || displayType }}"
  value="{{ mappingSjs.getFormItemValue(formData, item.path) }}"
>
  <view
    slot-scope="props"
    style="opacity: {{ (item.disabled || item.props.disabled) ? '0.4' : '1' }}"
    onTap="onDisabledTap"
    data-listItem="{{listItem}}">
    <!--内置组件-->
    <template
      a:if="{{mappingSjs.isInternalComponent(item.widget)}}"
      is="{{item.widget || 'input'}}"
      data="{{
        item: item,
        value: mappingSjs.getFormItemValue(formData, item.path)
      }}"
    />

    <!--自定义组件-->
    <slot
      a:if="{{ !mappingSjs.isInternalComponent(item.widget) }}"
      field="{{ item.path }}"
      config="{{mappingSjs.getComponentConfig(item)}}"
      value="{{ mappingSjs.getFormItemValue(formData, item.path)}}"
      widget="{{item.widget}}"
    />
  </view>

  <slot
    name="extra"
    slot-scope="props"
    slot="extra"
    extra="{{props.extra}}"
    field="{{ item.path }}"
    config="{{mappingSjs.getComponentConfig(item)}}"
    value="{{ mappingSjs.getFormItemValue(formData, item.path)}}"
    widget="{{item.widget}}"
  />

  <slot
    name="custom-error"
    slot="custom-error"
    slot-scope="props"
    errorInfo="{{props.errorInfo}}"
  />
</form-item>
